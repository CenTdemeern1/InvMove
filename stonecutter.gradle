plugins {
    id "dev.kikugie.stonecutter"
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT' apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

// I was getting weird caching issues and I think this disables caching
stonecutter.debug = true

stonecutter.active "1.21.3" /* [SC] DO NOT EDIT */

stonecutter.registerChiseled tasks.register("chiseledBuild", stonecutter.chiseled) { 
    setGroup "project"
    ofTask "buildAndCollect"
}

subprojects {
    if (parent != rootProject) {
        apply plugin: "java"
        apply plugin: 'architectury-plugin'
        apply plugin: 'dev.architectury.loom'

        stonecutter {
            swap("Input", eval(stonecutter.current.version, ">=1.21.2") ? "ClientInput" : "Input")
        }

        archivesBaseName = "$rootProject.display_name-$project.name"

        ext.get = prop -> {
            return rootProject.project(stonecutter.current.project).property(prop)
        }

        group = "$maven_group.$parent.name"

        loom {
            silentMojangMappingsLicense()

            accessWidenerPath = project(":common").file("src/main/resources/invmove.accesswidener")

            runs {
                remove server
            }

            runConfigs.all {
                ideConfigGenerated = false
                runDir "../../../run"
            }
        }

        dependencies {
            minecraft "net.minecraft:minecraft:$stonecutter.current.project"
            mappings loom.officialMojangMappings()
        }

        java {
            withSourcesJar()

            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.toVersion(get("java"))
        }

        tasks.withType(JavaCompile).tap {
            configureEach {
                options.encoding = "UTF-8"
                options.release.set Integer.parseInt(get("java"))
            }
        }

        repositories {
            maven { url "https://maven.shedaniel.me/" }
            maven { url "https://maven.terraformersmc.com" }
            maven { url "https://maven.fabricmc.net/" }
            maven { url "https://maven.architectury.dev/" }
            maven { url "https://files.minecraftforge.net/maven/" }
        }

        processResources {
            if (parent.name != "common") {
                // need to manually copy resources from common when running in dev
                // but doing this when building to jar results in mixin refmap not being included
                if (project.gradle.startParameter.taskNames.getFirst().containsIgnoreCase("run")) {
                    from(project(":common:$stonecutter.current.project").sourceSets["main"].resources)
                }
            }
        }

        if (stonecutter.current.isActive && parent.name != "common") {
            rootProject.tasks.register("Run Active ${parent.name.capitalize()}") {
                group = "project"
                dependsOn(tasks.named("runClient"))
            }
        }

        tasks.register("collectFile") {
            group = "build"
            mustRunAfter("build")

            doLast {
                def platproj = parent
                if(platproj.name.matches("fabric|forge|neoforge")) {
                    copy {
                        from file("build/libs/${display_name}-${project.name}-${version}.jar")
                        into rootProject.file("build/libs")
                        rename(".+", "${display_name}-${project.name}-${version}-${platproj.name.capitalize()}.jar")
                    }
                }
            }
        }

        tasks.register("buildAndCollect") {
            group = "build"
            dependsOn(tasks.named("build"), tasks.named("collectFile"))
        }
    }
}
