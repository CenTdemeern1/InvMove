plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

// Read version-specific properties file
project.ext.set("props", new Properties())
file("props/${rootProject.minecraft_version}.properties").withInputStream { project.props.load(it) }

println()
println "Minecraft: ${rootProject.minecraft_version} (Java ${project.props.java})"
println "  Platforms: ${project.props.enabled_platforms}"
println "  Fabric: ${project.props.fabric_api}"
println "  NeoForge: ${project.props.neoforge}"
println "  Forge: ${project.props.forge}"
println()

// Write build.properties with the current version
new File(projectDir, "build.properties").text = String.format("MC_%s=\n", rootProject.minecraft_version.replace(".", "_"))

subprojects {
    apply plugin: 'dev.architectury.loom'

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com" }
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: 'architectury-plugin'

    archivesBaseName = "$rootProject.display_name-$project.name"

    repositories {
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    dependencies {
        annotationProcessor "systems.manifold:manifold-preprocessor:$rootProject.manifold_version"
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.toVersion(project.props.java)
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
            options.release.set Integer.parseInt(project.props.java)
            options.compilerArgs += ["-Xplugin:Manifold"]
        }
    }
}